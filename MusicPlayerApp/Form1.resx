<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>